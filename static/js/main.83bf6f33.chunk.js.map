{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","index.js","meme_placeholder.jpg"],"names":["Header","react_default","a","createElement","role","aria-label","style","fontSize","MemeGenerator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","topText","bottomText","imgURL","imgAlt","allMemeImgs","handleChange","bind","assertThisInitialized","handleSubmit","_this2","fetch","then","response","json","responseJSON","allMemes","data","memes","setState","event","_event$target","target","name","value","defineProperty","preventDefault","_this$getRandomMeme","getRandomMeme","url","alt","randomIndex","Math","floor","random","length","className","onSubmit","type","placeholder","onChange","src","memePlaceholder","React","Component","App","src_Header","src_MemeGenerator","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"6LAWeA,MATf,WACE,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,QAAMC,KAAK,MAAMC,aAAW,QAAQC,MAAO,CAACC,SAAU,KAAtD,gBACAN,EAAAC,EAAAC,cAAA,6FC2ESK,cA7Eb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,MAAQ,CACXC,QAAS,GACTC,WAAY,GACZC,OAAQ,GACRC,OAAQ,GACRC,YAAa,IAGfZ,EAAKa,aAAeb,EAAKa,aAAaC,KAAlBb,OAAAc,EAAA,EAAAd,CAAAD,IACpBA,EAAKgB,aAAehB,EAAKgB,aAAaF,KAAlBb,OAAAc,EAAA,EAAAd,CAAAD,IAZRA,mFAgBM,IAAAiB,EAAAd,KAClBe,MAAM,qCACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACF,IAAMC,EAAWD,EAAaE,KAAKC,MACnCR,EAAKS,SAAS,CAAEd,YAAaW,2CAIxBI,GAAO,IAAAC,EACMD,EAAME,OAAtBC,EADUF,EACVE,KAAMC,EADIH,EACJG,MACd5B,KAAKuB,SAALzB,OAAA+B,EAAA,EAAA/B,CAAA,GAAiB6B,EAAOC,yCAGbJ,GACXA,EAAMM,iBADY,IAAAC,EAEG/B,KAAKgC,gBAAlBC,EAFUF,EAEVE,IAAKC,EAFKH,EAELG,IACblC,KAAKuB,SAAS,CAAEhB,OAAQ0B,EAAKzB,OAAQ0B,4CAIrC,IAAMC,EAAcC,KAAKC,MAAMD,KAAKE,UAAYtC,KAAKI,MAAMK,YAAY8B,OAAS,IAEhF,OADmBvC,KAAKI,MAAMK,YAAY0B,oCAK1C,OACE9C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMiD,UAAU,YAAYC,SAAUzC,KAAKa,cAEzCxB,EAAAC,EAAAC,cAAA,SACEmD,KAAK,OACLC,YAAY,WACZf,MAAO5B,KAAKI,MAAMC,QAClBsB,KAAK,UACLiB,SAAU5C,KAAKU,eAGjBrB,EAAAC,EAAAC,cAAA,SACEmD,KAAK,OACLC,YAAY,cACZf,MAAO5B,KAAKI,MAAME,WAClBqB,KAAK,aACLiB,SAAU5C,KAAKU,eAGjBrB,EAAAC,EAAAC,cAAA,2BAGFF,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,QACbnD,EAAAC,EAAAC,cAAA,OAAKsD,IAAK7C,KAAKI,MAAMG,QAAUuC,IAAiBZ,IAAKlC,KAAKI,MAAMI,SAChEnB,EAAAC,EAAAC,cAAA,MAAIiD,UAAU,OAAQxC,KAAKI,MAAMC,SACjChB,EAAAC,EAAAC,cAAA,MAAIiD,UAAU,UAAWxC,KAAKI,MAAME,qBAtElByC,IAAMC,WCanBC,MAZf,WACE,OACE5D,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC2D,EAAD,MACA7D,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,0EACAF,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAC4D,EAAD,cCNNC,IAASC,OAAOhE,EAAAC,EAAAC,cAAC+D,EAAD,MAASC,SAASC,eAAe,4BCLjDC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.83bf6f33.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header() {\n  return(\n    <header>\n      <span role=\"img\" aria-label=\"emoji\" style={{fontSize: 90}}>&#128514;</span>\n      <p>Meme Reactor</p>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport memePlaceholder from './meme_placeholder.jpg'\n\nclass MemeGenerator extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      topText: '',\n      bottomText: '',\n      imgURL: '',\n      imgAlt: '',\n      allMemeImgs: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // Fetches and save the meme data via imgflip API\n  componentDidMount() {\n    fetch('https://api.imgflip.com/get_memes')\n      .then(response => response.json())\n      .then(responseJSON => {\n          const allMemes = responseJSON.data.memes;\n          this.setState({ allMemeImgs: allMemes})\n      });\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n  \n  handleSubmit(event) {\n    event.preventDefault();\n    const { url, alt } = this.getRandomMeme();\n    this.setState({ imgURL: url, imgAlt: alt });\n  }\n\n  getRandomMeme() {\n    const randomIndex = Math.floor(Math.random() * (this.state.allMemeImgs.length + 1));\n    const randomMeme = this.state.allMemeImgs[randomIndex];\n    return randomMeme;\n  }\n\n  render() {\n    return(\n      <div>\n        <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n\n          <input \n            type=\"text\"\n            placeholder=\"Top text\"\n            value={this.state.topText}\n            name=\"topText\"\n            onChange={this.handleChange}\n          />\n\n          <input \n            type=\"text\"\n            placeholder=\"Bottom text\"\n            value={this.state.bottomText}\n            name=\"bottomText\"\n            onChange={this.handleChange}\n          />\n\n          <button>Generate</button>\n        </form>\n\n        <div className=\"meme\">\n          <img src={this.state.imgURL || memePlaceholder} alt={this.state.imgAlt} />\n          <h2 className=\"top\">{ this.state.topText }</h2>\n          <h2 className=\"bottom\">{ this.state.bottomText }</h2>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default MemeGenerator;","import React from 'react'\nimport Header from './Header'\nimport MemeGenerator from './MemeGenerator'\n\nfunction App() {\n  return(\n    <main>\n      <Header />\n      <h1>Generate Memes</h1>\n      <p>Enter top and bottom text for your meme and click the button.</p>\n      <p>Your meme will be ready right away!</p>\n      <MemeGenerator />\n    </main>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/meme_placeholder.e8062550.jpg\";"],"sourceRoot":""}